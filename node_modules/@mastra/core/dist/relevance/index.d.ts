import '../base-BZViaFTt.js';
import { aw as MastraLanguageModel } from '../base-DA1J3qra.js';
import '@opentelemetry/api';
import '../index-mKY1XrpK.js';
import 'stream';
import 'pino';
import '@opentelemetry/sdk-trace-base';
import 'ai';
import 'sift';
import 'zod';
import 'json-schema';
import '../types-CwTG2XyQ.js';
import '../deployer/index.js';
import '../bundler/index.js';
import '../vector/index.js';
import '../vector/filter/index.js';
import '../tts/index.js';
import '../voice/index.js';

interface RelevanceScoreProvider {
    getRelevanceScore(text1: string, text2: string): Promise<number>;
}
declare function createSimilarityPrompt(query: string, text: string): string;

declare class CohereRelevanceScorer implements RelevanceScoreProvider {
    private client;
    private model;
    constructor(model: string, apiKey?: string);
    getRelevanceScore(query: string, text: string): Promise<number>;
}

declare class MastraAgentRelevanceScorer implements RelevanceScoreProvider {
    private agent;
    constructor(name: string, model: MastraLanguageModel);
    getRelevanceScore(query: string, text: string): Promise<number>;
}

export { CohereRelevanceScorer, MastraAgentRelevanceScorer, type RelevanceScoreProvider, createSimilarityPrompt };
